#version 330 core

struct DirectionalLight
{
	vec3 ambientColor;
	float ambientIntensity;

	vec3 directionalColor;
	float directionalIntensity;
	vec3 direction;
};

in vec4 vCol;
in vec2 vUV;
in vec3 vNormal;

// Ouput data
out vec4 color;

// reason why this is automatically identified as the bound texture is because there's only ONE atm.
// If there were more than one texture we'd have to bind the uniform
uniform sampler2D mainTexSampler; 


uniform DirectionalLight dirLight;


void main()
{
	vec4 ambientLight = vec4( dirLight.ambientColor, 1.0f) * dirLight.ambientIntensity;
	vec4 directionalLight = vec4( dirLight.directionalColor, 1.0f) * dirLight.directionalIntensity;

	directionalLight *= max( dot( normalize(vNormal), dirLight.direction) , 0.0f);

	color = texture(mainTexSampler, vUV) *  (ambientLight + directionalLight);
}